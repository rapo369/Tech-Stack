apiVersion: v1
kind: ConfigMap
metadata:
  name: hivemq
  labels:
    app: hivemq
data:
  KAFKA_PRODUCER_BOOTSTRAP_SERVERS: "kafka-0.kafka-svc:9092,kafka-1.kafka-svc:9092,kafka-2.kafka-svc:9092"
  IDLE_TIMEOUT_SECONDS: "300"
  HAA_mqtt_user_prefix: "harman/dev/"
  HAA_mqtt_topic_prefix: "haa/harman/dev"
  HAA_hivemq_message_sink_kinesis: "false"
  HAA_kafka_sink_topic_alerts: "haa-harman-dev-alerts"
  HAA_kafka_sink_topic_events: "haa-harman-dev-events"
  HAA_kinesis_sink_topic_alerts: "haa-harman-dev-alerts"
  HAA_kinesis_sink_topic_events: "haa-harman-dev-events"
  HAA_kinesis_accessKey: "AKIAJCGSEHX2UYBCMCGQ"
  HAA_kinesis_secretAccessKey: "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"
  HAA_kafka_broker_url: "kafka-0.kafka-svc:9092,kafka-1.kafka-svc:9092,kafka-2.kafka-svc:9092"
  HAA_redis_mode: "SENTINEL"
  HAA_redis_master_name: "redis-sentinel"
  HAA_redis_sentinel_endpoints: "redis-sentinel-0.redis-sentinel-svc:26379,redis-sentinel-1.redis-sentinel-svc:26379,redis-sentinel-2.redis-sentinel-svc:26379"
  HAA_jwt_publickey_path: "/opt/hivemq/conf/wso_harman_dev_publickey.txt"
  HAA_oauth_introspect_url: "https://ignite-dev-small.ahanet.net:8443/oauth2/introspect"
  HAA_topic_mapper_impl_class: "com.harman.hivemq.routing.TopicMapperCloudMobile"
  HAA_ingestion_serializer_impl: "com.harman.ignite.serializer.IngestionSerializerFSTImpl"
  HAA_connect_impl_class: "com.harman.hivemq.callbacks.ClientConnect"
  HAA_disconnect_impl_class: "com.harman.hivemq.callbacks.ClientDisconnect"
  HAA_wrap_with_ignite_event_enabled: "false"
  HIVEMQ_MAX_QUEUED_MSG: "1000"
  HIVEMQ_PACKET_IDLE_TIMEOUT: "5000"
  HIVEMQ_PERSISTENCE_CLIENT_GENERAL_MODE: "in-memory"
  HIVEMQ_PERSISTENCE_CLIENT_SUB_MODE: "in-memory"
  HIVEMQ_PERSISTENCE_RETAINED_MODE: "in-memory"
  HIVEMQ_PERSISTENCE_MSG_IN_MODE: "in-memory"
  HIVEMQ_PERSISTENCE_MSG_OUT_MODE: "in-memory"
  HIVEMQ_MAX_QUEUED_MSG_PER_CLIENT: "1000"
  HIVEMQ_PERSISTENCE_QUEUED_MSG_MODE: "in-memory"
  HIVEMQ_QUEUE_MSG_STRATEGY: "in-memory"
  HIVEMQ_CLUSTER_DISCOVERY_RELOAD_INT: "30"
  HIVEMQ_CLIENTSESSION_REPLICATE_COUNT: "0"
  HIVEMQ_SUBSCRIPTIONS_REPLICATE_COUNT: "0"
  HIVEMQ_TOPICTREE_REPLICATE_COUNT: "0"
  HAA_kafka_ssl_enable: "false"
  JAVA_OPTS: "-Xmx2g -Xms1g -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+DisableExplicitGC -XX:MetaspaceSize=96m -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -DLOG_LEVEL=DEBUG"
---
apiVersion: v1
kind: Service
metadata:
  name: hivemq-ext-svc
  labels:
    app: hivemq
    facing: external
    impl: external
spec:
  ports:
  - protocol: TCP
    port: 1883
    targetPort: 1883
    name: tcp
  type: LoadBalancer
  selector:
    app: hivemq
---
apiVersion: v1
kind: Service
metadata:
  name: hivemq-int-svc
  labels:
    app: hivemq
    facing: internal
    impl: native
spec:
  ports:
  - protocol: TCP
    port: 1883
    targetPort: 1883
    name: tcp
  selector:
    app: hivemq
---
apiVersion: v1
kind: Service
metadata:
  name: hivemq-svc
  labels:
    app: hivemq
spec:
  ports:
  - port: 1883
    name: server
  clusterIP: None
  selector:
    app: hivemq
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hivemq
spec:
  serviceName: hivemq-svc
  selector:
    matchLabels:
      app: hivemq
  replicas: 3
  template:
    metadata:
      labels:
        app: hivemq
      name: hivemq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node.ignite.harman.com/component
                operator: In
                values: ["mqtt"]
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - hivemq
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: hivemq
        image: registry.ahanet.net:5000/haa/hivemq-plugin:8.4-SNAPSHOT
        command: ["/opt/hivemq/bin/start.sh"]
        ports:
        - containerPort: 1883
          name: tcp
        envFrom:
        - configMapRef:
            name: hivemq
        volumeMounts:
          - mountPath: /opt/hivemq/log
            name: logs
          - mountPath: /opt/hivemq/data
            name: data
      imagePullSecrets:
      - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: normal
      resources:
        requests:
          storage: 50Gi
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: normal
      resources:
        requests:
          storage: 100Gi
