apiVersion: v1
kind: ConfigMap
metadata:
  name: saas-apigw-config
  labels:
    app: saas-apigw
    group: api
data:
  tenant: "harman"
  env: "dev"
  jwt-sign-key: "./pem_files/harman_dev_wso2_key.pem"
  log-level: "INFO"
  oauth: "https://dev-ignite-is.ahanet.net"
  oauth-auth-header: "WjUyQUluRkliakY2NDdqM2l1bWs3V2FJTWljYTpnWDlUTjFYbUV0Nl81dmM4ZzJ0YVljaWxnb1lh"
---
apiVersion: v1
kind: Service
metadata:
  name: saas-apigw-ext-svc
  labels:
    app: saas-apigw
    group: api
    facing: external
    impl: external
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: tcp
  type: LoadBalancer
  selector:
    app: saas-apigw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: saas-apigw
  labels:
    app: saas-apigw
    group: api
spec:
  selector:
    matchLabels:
      app: saas-apigw
  replicas: 1
  template:
    metadata:
      labels:
        app: saas-apigw
        group: api
      name: saas-apigw
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node.ignite.harman.com/component
                operator: In
                values: ["api"]
      containers:
      - name: saas-apigw
        image: registry.ahanet.net:5000/haa/api-gateway:8.4-SNAPSHOT
        imagePullPolicy: Always
        command: 
        - sh
        - -c
        - "/bin/sh /home/swm/app/docker-entrypoint.sh"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 8080
          name: tcp
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CATALINA_OPTS
          value : "-server -Xmx1G -Xms1G -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+DisableExplicitGC -Djava.awt.headless=true"
        - name: OAuth2.base.url
          valueFrom:
            configMapKeyRef:
                name: saas-apigw-config
                key: oauth
        - name: OAuth2.basic.auth.header
          valueFrom:
            configMapKeyRef:
                name: saas-apigw-config
                key: oauth-auth-header
        - name: TENANT
          valueFrom:
            configMapKeyRef:
                name: saas-apigw-config
                key: tenant
        - name: ENV
          valueFrom:
            configMapKeyRef:
                name: saas-apigw-config
                key: env
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
                name: saas-apigw-config
                key: log-level
        - name: config_wsoJwtTokenSignerPemFile
          valueFrom:
            configMapKeyRef:
                name: saas-apigw-config
                key: jwt-sign-key
        volumeMounts:
          - mountPath: /usr/local/tomcat/logs
            name: logs
      imagePullSecrets:
      - name: regcred
      volumes:
        - name: logs
          emptyDir: {}
